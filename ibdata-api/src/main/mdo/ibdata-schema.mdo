<model xmlns="http://codehaus-plexus.github.io/MODELLO/1.8.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://codehaus-plexus.github.io/MODELLO/1.8.0 http://codehaus-plexus.github.io/modello/xsd/modello-1.8.0.xsd"
  java.suppressAllWarnings="false"
  xml.namespace="https://resources.infrastructurebuilder.org/IBDataSet/${apiVersion}"
  xml.schemaLocation="https://resources.infrastructurebuilder.org/xsd/IBDataSet-${apiVersion}"
  xsd.namespace="https://resources.infrastructurebuilder.org/IBDataSet/${apiVersion}"
  xsd.targetNamespace="https://resources.infrastructurebuilder.org/IBDataSet/${apiVersion}">
  <id>persistedschema</id>
  <name>PersistedIBSchema</name>
  <!-- Must be a single (no spaces, no dashes, no periods) identifier in
    order to create reader/writer -->
  <description>Generate reader for schemas</description>
  <defaults>
    <default>
      <key>package</key>
      <value>${project.groupId}.model</value>
    </default>
  </defaults>
  <versionDefinition>
    <type>field</type>
    <value>modelVersion</value>
  </versionDefinition>
  <classes>
    <!-- MODEL -->

    <class xml.tagName="schema" rootElement="true"
      java.clone="deep">
      <name>PersistedIBSchema</name>
      <version>1.0.0+</version>
      <description>
        <![CDATA[
        The <code>&lt;schema&gt;</code> element contains information about a single schema.
        ]]>
      </description>
      <fields>
        <field>
          <name>modelVersion</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>Declares to which version of descriptor this configuration conforms.
            This value is the api version (major.minor) for transportable schemas and conforms to semantic versioning</description>
          <type>String</type>
        </field>
        <field >
          <name>uuid</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>UUID identifier of the DataSchema, which is the UUID from the sha512 field.</description>
          <type>String</type>
        </field>
        <field>
          <name>sha512</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>calculated SHA-512 of the other values in the schema.  This value is used to produce the uuid. </description>
          <type>String</type>
        </field>
        <field >
          <name>url</name>
          <version>1.0.0+</version>
          <required>false</required>
          <description>Original URL source</description>
          <type>String</type>
        </field>
        <field >
          <name>name</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>The full name of the DataSchema.</description>
          <type>String</type>
        </field>
        <field >
          <name>nameSpace</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>The full namespace of the DataSchema.</description>
          <type>String</type>
        </field>
        <field >
          <name>description</name>
          <version>1.0.0+</version>
          <description>A detailed description of the DataSchema</description>
          <required>true</required>
          <type>String</type>
        </field>
        <field>
          <name>mimeType</name>
          <version>1.0.0+</version>
          <description>Stringified version of a MIME type for the datastream</description>
          <required>true</required>
          <defaultValue>application/octet-stream</defaultValue>
          <type>String</type>
        </field>

        <field xml.format="yyyy-MM-dd'T'HH:mm:ss.SSS">
          <name>creationDate</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>Creation date of this stream, required</description>
          <type>Date</type>
        </field>
        <field >
          <name>metadata</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>Additional metadata</description>
          <type>DOM</type>
        </field>
        <field>
          <name>type</name>
          <version>1.0.0+</version>
          <association>
            <type>SchemaType</type>
            <multiplicity>1</multiplicity>
          </association>
          <required>true</required>
        </field>
        <field>
          <name>fields</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>Fields of this structure</description>
          <association>
            <type>SchemaField</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>indexes</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>Mechanisms for describing indexing in target systems</description>
          <association>
            <type>SchemaIndex</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field>
          <name>forcedMap</name>
          <version>1.0.0+</version>
          <description>A uuid that indicates a DataStream
          element that holds a specific impl of a schema for this schema. This allows
          one to override the generated schema (which we strongly recommend against)
          in favor of a type-specific schema to be supplied to the underlying type
          </description>
          <required>false</required>
          <association>
            <multiplicity>*</multiplicity>
            <type>ForcedMapping</type>
          </association>
        </field>

      </fields>
    </class>

    <class xml.tagName="forcedMapping" java.clone="deep">
      <name>ForcedMapping</name>
      <version>1.0.0+</version>
      <description>Force a mapping between a schema and
      a datastream AS A TYPE-SPECIFIC-SCHEMA</description>
      <fields>
        <field>
          <name>type</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>The "type"
      of the schema. This is some arbitrary per-implementation identifier.</description>
          <type>String</type>
        </field>
        <field>
          <name>schemaUUID</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>UUID of an existing DataStream that
      holds the schema for that provider for this Schema instance</description>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class xml.tagName="field"
      java.clone="deep">
      <name>SchemaField</name>
      <version>1.0.0+</version>
      <description> <![CDATA[ The <code>&lt;schema&gt;</code>
      element contains information about a single schema. ]]> </description>
      <fields>
        <field>
          <name>index</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>Describes the IBfield from a base of 0. Default value set to
      -1 to ensure setting proper index. Indices are forced reset prior to persistence.</description>
          <type>int</type>
          <defaultValue>-1</defaultValue>
        </field>
        <field>
          <name>name</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>The full
      name of the SchemaField. This name may be munged during translation.</description>
          <type>String</type>
        </field>
        <field>
          <name>description</name>
          <version>1.0.0+</version>
          <description>A detailed description of the SchemaField</description>
          <type>String</type>
        </field>
        <field>
          <name>type</name>
          <description>Value must match the typing
      enumeration in IBData (currently found in IBDataStructuredDataMetadataType).
      The default value (STREAM) indicates that this schema denotes a single file
      that is a stream of bytes, and that that is the most structure that can be
      inferred. Due to the nature of STREAM, it is very important to correctly
      set the SchemaField type.</description>
          <type>String</type>
          <required>true</required>
          <defaultValue>STREAM</defaultValue>
        </field>
        <field>
          <name>nullable</name>
          <description>If true, then this field is allowed to be null.</description>
          <type>boolean</type>
          <required>true</required>
          <defaultValue>false</defaultValue>
        </field>
        <field>
          <name>enumerations</name>
          <description>List of named enumerations
      for this field.</description>
          <association>
            <type>String</type>
            <multiplicity>*</multiplicity>
          </association>
          <required>false</required>
        </field>
        <field>
          <name>versionAppeared</name>
          <description>version where this SchemaField became valid. Versions should
      be truncated to api version. This field is required when updating a schema
      to a new version.</description>
          <type>String</type>
          <required>false</required>
        </field>
        <field>
          <name>deprecated</name>
          <description>If set to true, this
      SchemaField is deprecated. Schema deprecation is different than language
      deprecation. A deprecated field is not represented in outbound schema, but
      might be accepted as inbound schema. Deprecation definitely means different
      things to different underlying providers, but it may (likely) not be possible
      to back out a deprecation. For some providers, the only means of moving forward
      is to re-add the field as a new field with a later "versionAppeared".</description>
          <type>boolean</type>
          <required>false</required>
        </field>
        <field>
          <name>versionDeprecated</name>
          <description>version where this SchemaField became invalid. Versions should
      be truncated to api version. This field is required when producing a deprecation
      (note that a non-null value here does not indicate a deprecation. The flag
      must still be set in order to deprecate).</description>
          <type>String</type>
          <required>false</required>
        </field>
        <field >
          <name>metadata</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>Additional metadata</description>
          <type>DOM</type>
        </field>
      </fields>
    </class>







    <class xml.tagName="indexedField"
       java.clone="deep">
      <name>IndexField</name>
      <version>1.0.0+</version>
      <description>Describes a field element that is part of an index </description>
      <fields>
        <field>
          <name>index</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>The index of the field.</description>
          <type>int</type>
          <defaultValue>-1</defaultValue>
        </field>
        <field>
          <name>type</name>
          <description>Value must match the typing enumeration in IBData (currently found in IBFieldIndexType).  The default value (DEFAULT) indicates that this index is ordered according to default underlying technology</description>
          <type>String</type>
          <required>true</required>
          <defaultValue>DEFAULT</defaultValue>
        </field>
      </fields>
    </class>



    <class xml.tagName="index"
      java.clone="deep">
      <name>SchemaIndex</name>
      <version>1.0.0+</version>
      <description> <![CDATA[ The <code>&lt;schema&gt;</code>
      element contains information about a single schema. ]]> </description>
      <fields>
        <field>
          <name>name</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>The full name of the SchemaIndex. This name may be munged during translation.</description>
          <type>String</type>
        </field>
        <field>
          <name>description</name>
          <version>1.0.0+</version>
          <description>A detailed description of the SchemaIndex</description>
          <type>String</type>
        </field>
        <field>
          <name>type</name>
          <description>Value must match the typing
      enumeration in IBData (currently found in IBDataIndexingType).
      The default value (DEFAULT) indicates that this index is non-unique ascending naturally ordered</description>
          <type>String</type>
          <required>true</required>
          <defaultValue>DEFAULT</defaultValue>
        </field>
        <field>
          <name>unique</name>
          <description>If true, then this field is allowed to be null.</description>
          <type>boolean</type>
          <required>true</required>
          <defaultValue>false</defaultValue>
        </field>
        <field>
          <name>versionAppeared</name>
          <description>version where this SchemaIndex became valid. Versions should
      be truncated to api version. This field is required when updating a schema
      to a new version.</description>
          <type>String</type>
          <required>false</required>
        </field>
        <field>
          <name>deprecated</name>
          <description>If set to true, this
      SchemaIndex is deprecated. Schema deprecation is different than language
      deprecation. A deprecated field is not represented in outbound schema, but
      might be accepted as inbound schema. Deprecation definitely means different
      things to different underlying providers, but it may (likely) not be possible
      to back out a deprecation. For some providers, the only means of moving forward
      is to re-add the field as a new field with a later "versionAppeared".</description>
          <type>boolean</type>
          <required>false</required>
        </field>
        <field>
          <name>versionDeprecated</name>
          <description>version where this SchemaIndex became invalid. Versions should
      be truncated to api version. This field is required when producing a deprecation
      (note that a non-null value here does not indicate a deprecation. The flag
      must still be set in order to deprecate).</description>
          <type>String</type>
          <required>false</required>
        </field>
        <field>
          <name>fields</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>Targeted fields by name</description>
          <association>
            <type>IndexField</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>


      </fields>
    </class>






    <!-- <class java.clone="deep"> <name>PersistedIBSchemaInputLocation</name>
      <version>1.0.0+</version> <fields> </fields> <codeSegments> <codeSegment>
      <version>1.0.0+</version> <code> <![CDATA[ @Override public String toString()
      { return getLineNumber() + " : " + getColumnNumber() + ", " + getSource();
      } ]]> </code> </codeSegment> </codeSegments> </class> <class sourceTracker="source"
      java.clone="shallow"> <name>PersistedIBSchemaInputSource</name> <version>1.0.0+</version>
      <fields> <field> <name>modelId</name> <version>1.0.0+</version> <type>String</type>
      </field> <field> <name>location</name> <version>1.0.0+</version> <type>String</type>
      </field> </fields> <codeSegments> <codeSegment> <version>1.0.0+</version>
      <code> <![CDATA[ @Override public String toString() { return getModelId()
      + " " + getLocation(); } ]]> </code> </codeSegment> </codeSegments> </class> -->
    <class xml.tagName="gav" java.clone="deep">
      <name>Dependency</name>
      <version>1.0.0+</version>
      <fields>
        <field>
          <name>groupId</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>Group ID</description>
          <type>String</type>
        </field>
        <field>
          <name>artifactId</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>ArtifactId ID</description>
          <type>String</type>
        </field>
        <field>
          <name>version</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>version</description>
          <type>String</type>
        </field>
        <field>
          <name>extension</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>extension (not type-mapped)</description>
          <type>String</type>
        </field>
        <field>
          <name>classifier</name>
          <version>1.0.0+</version>
          <required>false</required>
          <description>Addl classifier</description>
          <type>String</type>
        </field>
      </fields>
    </class>

    <class xml.tagName="schemaType" java.clone="deep">
      <name>SchemaType</name>
      <version>1.0.0+</version>
      <fields>
        <field>
          <name>type</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>Schema technology identifier (component hint)</description>
          <defaultValue>default</defaultValue>
          <type>String</type>
        </field>
        <field>
          <name>technology</name>
          <version>1.0.0+</version>
          <required>true</required>
          <description>Technology underlying the schema management</description>
          <defaultValue>ibdata</defaultValue>
          <type>String</type>
        </field>
        <field >
          <name>versionedProvider</name>
          <version>1.0.0+</version>
          <required>false</required>
          <description>Identifier for the underlying provider's artifact</description>
          <defaultValue>:::</defaultValue>
          <type>String</type>
        </field>
      </fields>
    </class>
    <class locationTracker="locations" java.clone="shallow">
      <name>DataSchemaInputLocation</name>
      <version>1.0.0+</version>
      <fields>
        <!-- line, column and source fields are auto-generated by Modello -->
      </fields>
      <codeSegments>
        <codeSegment>
          <version>1.0.0+</version>
          <code>
            <![CDATA[

    @Override
    public String toString()
    {
        return getLineNumber() + " : " + getColumnNumber() + ", " + getSource();
    }
            ]]>
          </code>
        </codeSegment>
      </codeSegments>
    </class>
    <class sourceTracker="source" java.clone="shallow">
      <name>DataSchemaInputSource</name>
      <version>1.0.0+</version>
      <fields>
        <field>
          <name>modelId</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>
            <![CDATA[
            The identifier of the deployment model in the format {@code <groupId>:<artifactId>:<version>}.
            ]]>
          </description>
        </field>
        <field>
          <name>location</name>
          <version>1.0.0+</version>
          <type>String</type>
          <description>
            <![CDATA[
            The path/URL of the deployment model or {@code null} if unknown.
            ]]>
          </description>
        </field>
      </fields>
      <codeSegments>
        <codeSegment>
          <version>1.0.0+</version>
          <code>
            <![CDATA[
    @Override
    public String toString()
    {
        return getModelId() + " " + getLocation();
    }
            ]]>
          </code>
        </codeSegment>
      </codeSegments>
    </class>


  </classes>
</model>